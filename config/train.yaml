hydra:
  run:
    dir: /media/dmitry/data/outputs/${now:%Y-%m-%d}/${now:%H-%M-%S}

defaults:
  - model/effdet/base
  - model: effdet/d1

general:
  gpu: 1
  seed: 333

distributed:
  backend: nccl
  url: env://

data:
  mean: [0.485, 0.456, 0.406]
  std: [0.229, 0.224, 0.225]
  train:
    class: data.dataset.ExtendedWheatDataset
    params:
      image_dir: /media/dmitry/data/global-wheat-detection/train
      csv: /media/dmitry/data/global-wheat-detection/train.csv
      gen_image_dirs:
        - /media/dmitry/data/global-wheat-detection/synthetic/2020-07-19/15-13-08
      source: [ethz_1, arvalis_1, rres_1, arvalis_3]
      show_progress: false
    orig_images_ratio: 0.5
    loader:
      # batch size per each device
      batch_size: 8
      workers: 2
    transforms:
      resize:
        class: albumentations.Resize
        params:
          height: 640
          width: 640
          interpolation: 3  # cv2.INTER_AREA
      flip:
        class: albumentations.Flip
        params:
          p: 0.75
      rotate90:
        class: albumentations.RandomRotate90
        params:
          p: 0.75
      affine:
        class: data.transforms.affine
        params:
          shift_limit: 0
          scale_limit: [0.05, 0.15]
          rotate_limit: 25
          p: 0.33
      color:
        class: data.transforms.color_jitter
        params:
          brightness_limit: 0.2
          contrast_limit: 0.2
          brightness_by_max: true
          r_shift_limit: 20
          g_shift_limit: 20
          b_shift_limit: 20
          hue_shift_limit: 15
          sat_shift_limit: 30
          val_shift_limit: 10
          p: 0.75
      enhance:
        class: data.transforms.enhancer
        params:
          blur_limit: 5
          p: 0.33
  val:
    class: data.dataset.WheatDataset
    params:
      image_dir: /media/dmitry/data/global-wheat-detection/train
      csv: /media/dmitry/data/global-wheat-detection/train.csv
      source: [usask_1, arvalis_2, inrae_1]
      show_progress: false
    loader:
      batch_size: 16
      workers: 2
    transforms:
      resize:
        class: albumentations.Resize
        params:
          height: 640
          width: 640
          interpolation: 3  # cv2.INTER_AREA

model:
  class: effdet.create_model_from_config
  params:
    config:
      pretrained_backbone: true
      num_classes: 1
    bench_name: train
    pretrained: false
    checkpoint_path: ''

# loss inside DetTrainBench
# TODO: maybe add option for alternative losses

optim:
  class: torch.optim.Adam
  params:
    lr: 0.001
    betas: [0.9, 0.999]
    eps: 1e-8
  step_interval: 1

train:
  skip: false
  epochs: 100
  epoch_length: -1

validate:
  interval_ep: 1
  calc_map: true

# Renders target and predicted bboxes on top of each image in the validation dataset.
visualize:
  enabled: true
  save_dir: ~
  num_images: 32
  interval_ep: 10

checkpoints:
  load: ~
  save_dir: ~
  interval_ep: 1
  interval_it: 500
  max_checkpoints: 100

logging:
  model: false
  interval_it: 100
  out:
    train:
      - loss
      - box_loss
    val:
      - loss
      - box_loss
